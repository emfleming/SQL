--In this project, I downloaded Spotify data from Kaggle and created a table to analyze the data using SQL.

--Create a table for Spotify data
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
song_key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
song_mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL )
;

--I then imported the .csv Spotify data into the newly created table.

--I determined each artist's average danceability, popularity, and energy in the Top 50 for 2021.
SELECT artist_name
,AVG(danceability) AS Artist_Danceability
,AVG(popularity) AS Artist_Popularity
,AVG(energy) AS Artist_Energy
FROM BIT_DB.Spotifydata
GROUP BY artist_name
;

--Next, I ordered the top 10 artists by popularity.
SELECT artist_name
,track_name
,popularity
FROM BIT_DB.Spotifydata
ORDER BY popularity DESC
LIMIT 10
;

--Next, I searched for songs that were not in 4/4 timing.
SELECT artist_name
,track_name
,popularity
,time_signature
FROM BIT_DB.Spotifydata
WHERE time_signature != 4
;

--Finally, I selected the artist with the longest song in the Top 50 dataset.
SELECT artist_name
,duration_ms / 60000 AS Song_length
FROM BIT_DB.Spotifydata
LIMIT 1
;
